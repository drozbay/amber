% B Ozbay 4/24/2017
% [coreStruct,imCores] = findFiberCores(imFiberImage);
% Inputs:
% imFiberImage - Full path to input tif image
% SE - Structural element generated by strel function
% thresh - Threshold level for identifying a peak as a core
% pixSize - Rescale images to this size (on largest axis)
% Outputs
% coreStruct - struct with all identified cores containing core location in
% local pixel coordinates and intensity value of the core at that location
% imCores - Output image of fiber cores with structural element
% represented by SE

function [coreStruct,imCoreVal,imCorePos] = findFiberCores(imInput, SE, thresh)

% Apply threshold to input image
imInput(imInput<thresh) = 0;
% Suppress pixels near border
imInput = imclearborder(imInput,4);

% Generate binary file identifying regional maxima
BW = imregionalmax(imInput,4);

% Get fiber core indices and info
coreStruct  = regionprops(BW,'centroid')';
centroids = round(cat(1, coreStruct.Centroid));

% Get values at individual fiber cores
sampleNum = 1;
for i = 1:length(coreStruct)
    coreStruct(i).value =...
        max(max(imInput(centroids(i,2)-sampleNum:centroids(i,2)+sampleNum,...
        centroids(i,1)-sampleNum:centroids(i,1)+sampleNum)));
end

% Generate images of centroids with core values
imCentVal = double(zeros(size(BW)));
imCentPos = imCentVal;
for i = 1:length(coreStruct)
    imCentVal(centroids(i,2),centroids(i,1))=coreStruct(i).value;
end
imCentPos(imCentVal>thresh) = 1;

% Generate disks to represent cores
imCoreVal = imdilate(imCentVal,SE);
imCoreVal = double(imCoreVal);
imCorePos = imdilate(imCentPos,SE);


